<?xml version="1.0" ?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
<!--
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License. See accompanying LICENSE file.
-->
<!-- Put site-specific property overrides in this file. -->
<configuration>
  <property>
    <name>dfs.namenode.file.close.num-committed-allowed</name>
    <value>1</value>
  </property>
  <property>
    <name>dfs.namenode.rpc-address</name>
    <value>tbd-cluster-m:8020</value>
    <description>
      RPC address that handles all clients requests. If empty then we'll get
      thevalue from fs.default.name.The value of this property will take the
      form of hdfs://nn-host1:rpc-port.
    </description>
  </property>
  <property>
    <name>dfs.permissions.enabled</name>
    <value>false</value>
    <description>
      If &amp;amp;amp;amp;amp;quot;true&amp;amp;amp;amp;amp;quot;, enable permission
      checking in       HDFS.       If
      &amp;amp;amp;amp;amp;quot;false&amp;amp;amp;amp;amp;quot;, permission
      checking is       turned off, but       all other       behavior is
      unchanged. Switching       from one parameter       value to the
      other does not change the       mode, owner or       group of       files
      or       directories.
    </description>
  </property>
  <property>
    <name>dfs.datanode.data.dir</name>
    <value>/hadoop/dfs/data</value>
    <description>
      Determines where on the local filesystem an DFS datanode should store its
      blocks. If this is a comma-delimited list of directories, then data will
      be stored in all named directories, typically on different
      devices.Directories that do not exist are ignored.
    </description>
  </property>
  <property>
    <name>dfs.namenode.http-address</name>
    <value>0.0.0.0:9870</value>
    <final>false</final>
    <source>Dataproc Cluster Properties</source>
  </property>
  <property>
    <name>dfs.permissions.supergroup</name>
    <value>hadoop</value>
    <description>The name of the group of super-users.</description>
  </property>
  <property>
    <name>dfs.namenode.datanode.registration.retry-hostname-dns-lookup</name>
    <value>true</value>
    <description>
      If true, then the namenode will retry reverse dns lookup for hostname of
      the       datanode. This helps in environments where DNS lookup can be
      flaky.
    </description>
  </property>
  <property>
    <name>dfs.namenode.secondary.http-address</name>
    <value>0.0.0.0:9868</value>
    <final>false</final>
    <source>Dataproc Cluster Properties</source>
  </property>
  <property>
    <name>dfs.client.read.shortcircuit</name>
    <value>true</value>
  </property>
  <property>
    <name>dfs.namenode.name.dir</name>
    <value>/hadoop/dfs/name</value>
    <description>
      Determines where on the local filesystem the DFS namenode should store the
      name table(fsimage). If this is a comma-delimited list of directories then
      the name table is replicated in all of the directories for redundancy.
    </description>
  </property>
  <property>
    <name>dfs.replication</name>
    <value>2</value>
    <description>
      Default block replication. The actual number of replications can be
      specified when the file is created. The default is used if replication
      is not specified in create time.
    </description>
  </property>
  <property>
    <name>dfs.domain.socket.path</name>
    <value>/var/lib/hadoop-hdfs/dn_socket</value>
  </property>
  <property>
    <name>dfs.namenode.checkpoint.dir</name>
    <value>file:///hadoop/dfs/namesecondary</value>
    <description>
      Determines where on the local filesystem the DFS secondary namenode should
      store       the temporary images to merge. If this is a comma-delimited
      list of directories then       the image is replicated in all of the
      directories for redundancy.
    </description>
  </property>
  <property>
    <name>dfs.datanode.data.dir.perm</name>
    <value>700</value>
    <description>
      Permissions for the directories on on the local filesystem where the DFS
      data node store its blocks. The permissions can either be octal or
      symbolic.
    </description>
  </property>
  <property>
    <name>dfs.namenode.datanode.registration.ip-hostname-check</name>
    <value>false</value>
  </property>
  <property>
    <name>dfs.namenode.hosts.provider.classname</name>
    <value>org.apache.hadoop.hdfs.server.blockmanagement.HostnameManager</value>
  </property>
  <property>
    <name>dfs.namenode.hosts.remove-untracked-decommissioned</name>
    <value>true</value>
  </property>
  <property>
    <name>dfs.datanode.address</name>
    <value>0.0.0.0:9866</value>
    <final>false</final>
    <source>Dataproc Cluster Properties</source>
  </property>
  <property>
    <name>dfs.namenode.https-address</name>
    <value>0.0.0.0:9871</value>
    <final>false</final>
    <source>Dataproc Cluster Properties</source>
  </property>
  <property>
    <name>dfs.namenode.lifeline.rpc-address</name>
    <value>tbd-cluster-m:8050</value>
    <final>false</final>
    <source>Dataproc Cluster Properties</source>
  </property>
  <property>
    <name>dfs.datanode.https.address</name>
    <value>0.0.0.0:9865</value>
    <final>false</final>
    <source>Dataproc Cluster Properties</source>
  </property>
  <property>
    <name>dfs.namenode.service.handler.count</name>
    <value>10</value>
    <final>false</final>
    <source>Dataproc Cluster Properties</source>
  </property>
  <property>
    <name>dfs.namenode.handler.count</name>
    <value>20</value>
    <final>false</final>
    <source>Dataproc Cluster Properties</source>
  </property>
  <property>
    <name>dfs.namenode.servicerpc-address</name>
    <value>tbd-cluster-m:8051</value>
    <final>false</final>
    <source>Dataproc Cluster Properties</source>
  </property>
  <property>
    <name>dfs.namenode.secondary.https-address</name>
    <value>0.0.0.0:9869</value>
    <final>false</final>
    <source>Dataproc Cluster Properties</source>
  </property>
  <property>
    <name>dfs.datanode.ipc.address</name>
    <value>0.0.0.0:9867</value>
    <final>false</final>
    <source>Dataproc Cluster Properties</source>
  </property>
  <property>
    <name>dfs.datanode.http.address</name>
    <value>0.0.0.0:9864</value>
    <final>false</final>
    <source>Dataproc Cluster Properties</source>
  </property>
  <property>
    <name>dfs.hosts</name>
    <value>/etc/hadoop/conf/nodes_include</value>
  </property>
  <property>
    <name>dfs.hosts.exclude</name>
    <value>/etc/hadoop/conf/nodes_exclude</value>
  </property>
</configuration>
